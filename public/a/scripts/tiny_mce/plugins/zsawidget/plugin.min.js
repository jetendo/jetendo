/**
 * plugin.js
 *
 * Released under LGPL License.
 * Copyright (c) 1999-2015 Ephox Corp. All rights reserved
 *
 * License: http://www.tinymce.com/license
 * Contributing: http://www.tinymce.com/contributing
 */

/*jshint unused:false */
/*global tinymce:true */


/**
 * zsafile plugin that adds a toolbar button and menu item.
 */
tinymce.PluginManager.add('zsawidget', function(editor, url) {
	// Add a button that opens a window
	function openGalleryDialog(){
		// Select Element Clicked
	var selectedElement = null;
	editor.on('click', function (e) {
		selectedElement = e.target;
		addToolbars(editor, e.target);
	});
		// Open window with a specific url
		editor.windowManager.open({
			title: 'Add Widget',
			url: url + '/dialog.htm',
			width: 600,
			height: 400,
			buttons: [ 
				{text: 'Close', onclick: 'close'}
			],
			selection_toolbar: 'quicklink h2 h3 blockquote'
		},
		{
			parentElement: selectedElement
		});
	}
	
	editor.addButton('zsawidget', {
		text: 'Add Widgets',
		icon: false,
		onclick: openGalleryDialog 
	});

	// Adds a menu item to the tools menu
	editor.addMenuItem('zsawidget', {
		text: 'Add Widgets',
		context: 'insert',
		icon: false,
		onclick: openGalleryDialog
	});

	// Select Element Clicked
	var selectedElement = null;
	editor.on('click', function (e) {
		selectedElement = e.target;
		addToolbars(editor, e.target);
	});

	// Layout Toolbar
	var layoutToolbar = [
		'deleteLayout', 'moveRowUp', 'moveRowDown' //, '|', 'tableinsertrowbefore'
	];

	function hasClass(element, className) { 
		if (element.classList) { 
			return element.classList.contains(className); 
		} 
		else { 
			return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className); 
		}  
        return false; 
    } 
	// Add Toolbars
	var addToolbars = function (editor, target) {
		var isLayout = function (target) {
			var currentElement=target;
			return true;
			while(currentElement){
				if(hasClass(currentElement, "ze-row")){ 
					return true;
				}
				currentElement=currentElement.parentNode;
			}
			return false;
		};
		editor.addContextToolbar(
			isLayout,
			layoutToolbar.join(' ')
		);
	};
	
	function hideContextPanel(){
		var panels=document.getElementsByClassName("mce-floatpanel");
		for(var i=0;i<panels.length;i++){
			panels[i].style.display='none'; 
		}
	}
	
	editor.addButton('deleteLayout', {
		type: 'button',
		title: 'Delete Row',
		icon: 'mce-ico mce-i-tabledelete',
		onclick: function () {  
			var currentElement=selectedElement;
			var lastElement=selectedElement;
			while(currentElement){ 
				if(hasClass(currentElement, "ze-row")){
					currentElement.parentNode.removeChild(currentElement);
					editor.undoManager.add();
					hideContextPanel();
					return;
				}
				currentElement=currentElement.parentNode;
				if(currentElement.tagName=="BODY"){
					break;
				}
				lastElement=currentElement;
			}
			lastElement.parentNode.removeChild(lastElement);
			editor.undoManager.add();
			hideContextPanel();
		}
	  }); 
	  
	editor.addButton('moveRowUp', {
		type: 'button',
		title: 'Move Row Up',
		icon: 'mce-ico mce-i-arrowup',
		onclick: function () {  
			var currentElement=selectedElement;
			var lastElement=currentElement;
			while(currentElement){ 
				if(hasClass(currentElement, "ze-row")){  
					if(currentElement.previousSibling){
						var sibling=currentElement.previousSibling;
						var parent=currentElement.parentNode;
						currentElement.parentNode.removeChild(currentElement);   
						parent.insertBefore(currentElement, sibling);   
						editor.undoManager.add();
					}
					hideContextPanel();
					return;
				}
				currentElement=currentElement.parentNode;
				if(currentElement.tagName=="BODY"){
					break;
				}
				lastElement=currentElement;
			}
			if(lastElement.previousSibling){
				var sibling=lastElement.previousSibling;
				var parent=lastElement.parentNode;
				lastElement.parentNode.removeChild(lastElement);   
				parent.insertBefore(lastElement, sibling);   
				editor.undoManager.add();
			}
			hideContextPanel();
		}
	  }); 
	editor.addButton('moveRowDown', {
		type: 'button',
		title: 'Move Row Down',
		icon: 'mce-ico mce-i-arrowdown',
		onclick: function () {  
			var currentElement=selectedElement;
			var lastElement=currentElement;
			while(currentElement){ 
				if(hasClass(currentElement, "ze-row")){  
					if(currentElement.nextSibling && currentElement.nextSibling.nextSibling){
						var sibling=currentElement.nextSibling.nextSibling;
						var parent=currentElement.parentNode;
						currentElement.parentNode.removeChild(currentElement);   
						parent.insertBefore(currentElement, sibling);   
						editor.undoManager.add();
					}
					hideContextPanel();
					return;
				}
				currentElement=currentElement.parentNode;
				if(currentElement.tagName=="BODY"){
					break;
				}
				lastElement=currentElement;
			}
			if(lastElement.nextSibling && currentElement.nextSibling.nextSibling){
				var sibling=lastElement.nextSibling;
				var parent=lastElement.parentNode;
				lastElement.parentNode.removeChild(lastElement);   
				parent.insertBefore(lastElement, sibling);   
				editor.undoManager.add();
			}
			hideContextPanel();
		}
	  }); 
});
